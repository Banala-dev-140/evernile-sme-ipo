version: '3.8'

services:
  # Evernile SME IPO - Complete Application
  evernile-sme-ipo:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: evernile-sme-ipo
    ports:
      - "3006:3000"   # Frontend (avoiding conflicts with existing services)
      - "3007:3001"   # Backend API
    environment:
      - NODE_ENV=production
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_APP_PASSWORD=${GMAIL_APP_PASSWORD}
      - PORT=3001
    volumes:
      - ./backend:/app/backend
      - ./frontend/dist:/app/frontend/dist
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service (standalone)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend-builder
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    volumes:
      - ./frontend/dist:/app/frontend/dist
    command: ["npx", "serve", "-s", ".", "-l", "3000"]
    restart: unless-stopped

  # Backend Service (standalone)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-builder
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_APP_PASSWORD=${GMAIL_APP_PASSWORD}
      - PORT=3001
    volumes:
      - ./backend:/app/backend
    command: ["npm", "start"]
    restart: unless-stopped
    depends_on:
      - frontend

  # Development Service (for local development)
  dev:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_APP_PASSWORD=${GMAIL_APP_PASSWORD}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/backend/node_modules
    command: ["sh", "-c", "cd backend && npm start & cd .. && npm run dev"]
    restart: unless-stopped
    profiles:
      - dev
